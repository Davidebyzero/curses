[ RepairSub; "You would achieve nothing by this."; ];

Verb 'add' 'join' 'mend' 'repair'
    * noun                                              -> Repair
    * noun 'to' noun                                    -> Repair;

[ TurnWithSub ;
    if( second ~= steel_wrench )
        print_ret (The) second, " is unsuitable for turning things.";
    if( location ~= Library_Storage )
        print "(The wrench seems unnecessary, so you use bare hands.)^";
    << Turn noun >>;
];

[ KnockSub ;
    if( noun hasnt door )
        print "(If you insist.)  ";
    "There is no reply.";
];

[ WashSub ;
    if( noun ~= carbolic_soap ) "That's not something you can wash with.";
    if( carbolic_soap notin player ) "You've no soap.";
    remove carbolic_soap;
    give carbolic_soap concealed;
    "Ugh, it tastes absolutely ghastly. But you feel better for it.";
];


[ StrongSub ;
    move carbolic_soap to player;
    give carbolic_soap ~concealed;
    "Now, that sort of language is an absolute disgrace, and you're going to have to pay the price for it.";
];

[ MildSub ;
    "It's good that you can express your frustration in such a mild way.";
];

[ SorrySub ;
    if( carbolic_soap has concealed ) "Oh, don't apologise.";
    "Sorry isn't good enough!";
];

[ PointAtSub ;
    print_ret "You point at ", (the) noun, ".";
];

[ PointVagueSub ;
    if( noun in compass && adamantine_knight in location ) {
        KnightReacts();
        rfalse;
    }
    if( noun has rod_attr ) 
        "Please point it at something.";
    "A useless gesture.";
];

[ PointSub r ;
    if( noun notin player ) "But you aren't holding it.";
    if( second in player ) "It's too fiddly pointing it at something you're holding.";
    if( noun hasnt rod_attr ) "Ok. (Why?)";
    if( noun hasnt charged ) "Nothing happens.";

    Achieved(SCORE_AIMWAND);
    r = noun.rod_action;
    if( r == -1 ) {
        "** No rod routine **";
    }
    give noun ~charged;
    r();
    rtrue;
];


[ StrikeSub ;
    if( noun notin player ) "But you aren't holding it.";
    if( noun hasnt rod_attr ) 
        print_ret "You ineffectually bash ", (the) noun, " on the ground.";
    if( noun has charged ) {
        deadflag = DIED;
        "The already-charged rod explodes with cataclysmic violence, burying everything nearby in rubble!";
    }
    give noun charged;
    Achieved(SCORE_WAND);
    if( BeforeRoutines() == true ) {
        rtrue;
    }
    "The rod charges with etherial power, drawn up from the earth through ley lines...";
];

[ MilkSub ;
    if( noun == goat or herd_of_goats ) 
        "Pour encourager les udders... But milking goats is no job for an amateur.";
    "What?";
];

[ StackSub; << Drop noun >>; ];

[ RipSub ;
    "That sort of wilful damage to property is exactly what's wrong with the world today. And another thing, 
     the influence of so-called rock and roll music on society has in my view, and I may be old-fashioned, 
     but... [etc]";
];

[ RipDownSub ;
    << Rip >>;
];

[ XyzzySub ;
    "For a moment you can almost hear a hoarse voice say something to you. But it passes.";
];

[ LagachSub ;
    "You feel inexplicably powerful, but nothing happens. Perhaps you should have addressed yourself more precisely.";
];

[ ShantihSub ;
    "For a moment you can almost hear thunder, as though it were saying something. But the moment passes.";
];

[ TimeSub ;
    WhereInGame();
    new_line;
    rtrue;
];

[ WhereInGame ;
    if( location == Inside_the_Orb ) {
        print "Inside the golden orb.";
        rfalse;
    }
    if( game_section == T_MODERN ) print "This is the afternoon of June 3rd, 1993, and you are in Meldrew Hall.";
    if( game_section == T_UNREAL ) print "It is early morning on October 5th, 1922, and you are in the Unreal City.";
    if( game_section == T_HAMBURG ) print "It is nearly midnight on October 31st, 1988, and you are in a museum in Hamburg.";
    if( game_section == T_TAROT ) print "You are passing among the strange, unearthly world of the Tarot box.";
    if( game_section == T_GARDEN ) print "It is the afternoon of June 3rd, 1993, and you are in the gardens.";
    if( game_section == T_GARDEN_PAST ) print "It is about noon on March 14th, 1808, and you are in the gardens.";
    if( game_section == T_ANCIENT_BRITAIN ) print "It is some time in the sixth century A.D., and you are in the Master Game.";
    if( game_section == T_DREAMING or (T_DREAMING|T_UNREAL) ) print "Time seems to have no meaning, and you are dreaming.";
    if( game_section == T_CATACOMBS ) print "It is the afternoon of June 3rd, 1993, and you are in the catacombs beneath the gardens.";
    if( game_section == T_ALEXANDRIA ) print "It is some time in the winter of 275 B.C., the reign of Ptolemy II, and you are in ancient Alexandria.";
    if( game_section == T_NE_OF_HOME ) print "It is the afternoon of June 3rd, 1993, and you are northeast of Meldrew Hall.";
    if( game_section == T_SPIRIT_WORLD ) print "You are in the Spirit World, centuries ahead of your sleeping body.";
    if( game_section == T_AFTERLIFE ) 
        print "In the great Monopoly-board Jail of the afterlife, you are ~Just Visiting~.";
    }
    rtrue;
];

[ SaveSub i;
!    displaying_quote = true;
    if( location == Heavenly_Place ) "The angel looks at you reproachfully.";
    if( location == Hellish_Place ) "The demon looks at you viciously.";
    @save -> i;
    if( generic_globvar == 0 ) 
        "Failed.";
    print "Ok.^";
    rtrue;
];

Verb 'strike'
    * noun                                              -> Strike
    * noun 'with' held                                  -> Attack;

Verb 'beckon' 'direct' 'gesture' 'point'
    * noun                                              -> PointVague
    * 'at' noun                                         -> PointAt
    * held 'at' noun                                    -> Point;

Extend 'turn' last
    * noun 'with' held                                  -> TurnWith;

Verb 'knock'
    * 'on' noun                                         -> Knock
    * 'at' noun                                         -> Knock;


Verb 'wash'
    * 'my' 'mouth' 'with' held                          -> Wash
    * 'my' 'mouth' 'out' 'with' held                    -> Wash
    * 'mouth' 'with' held                               -> Wash
    * 'mouth' 'out' 'with' held                         -> Wash;

Verb 'milk'
    * noun                                              -> Milk;

Verb 'rip' 'tear'
    *                                                   -> Rip
    * 'down' noun                                       -> RipDown
    * noun                                              -> Rip;

Verb 'achetez'
    * special                                           -> Buy;

Verb 'stack'
    * noun                                              -> Stack
    * noun 'with' held                                  -> Stack
    * held 'on' noun                                    -> Insert
    * held 'onto' noun                                  -> Insert
    * held 'in' noun                                    -> Insert;

Verb 'lagach'
    *                                                   -> Lagach;

Verb 'shantih'
    *                                                   -> Shantih
    * special                                           -> Shantih
    * special special                                   -> Shantih;

Verb 'plover' 'plugh' 'xyzzy'
    *                                                   -> Xyzzy;

Verb 'time'
    *                                                   -> Time;


