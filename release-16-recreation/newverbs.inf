[ RepairSub; "You would achieve nothing by this."; ];

Verb 'add' 'join' 'mend' 'repair'
    * noun                                              -> Repair
    * noun 'to' noun                                    -> Repair;

[ TurnWithSub ;
    if( second ~= steel_wrench )
        print_ret (The) second, " is unsuitable for turning things.";
    if( location ~= Library_Storage )
        print "(The wrench seems unnecessary, so you use bare hands.)^";
    << Turn noun >>;
];

[ KnockSub ;
    if( noun hasnt door )
        print "(If you insist.)  ";
    "There is no reply.";
];

[ WashSub ;
    if( noun ~= carbolic_soap ) "That's not something you can wash with.";
    if( carbolic_soap notin player ) "You've no soap.";
    remove carbolic_soap;
    give carbolic_soap concealed;
    "Ugh, it tastes absolutely ghastly. But you feel better for it.";
];


[ StrongSub ;
    move carbolic_soap to player;
    give carbolic_soap ~concealed;
    "Now, that sort of language is an absolute disgrace, and you're going to have to pay the price for it.";
];

[ MildSub ;
    "It's good that you can express your frustration in such a mild way.";
];

[ SorrySub ;
    if( carbolic_soap has concealed ) "Oh, don't apologise.";
    "Sorry isn't good enough!";
];

[ PointAtSub ;
    print_ret "You point at ", (the) noun, ".";
];

[ PointVagueSub ;
    if( noun in compass && adamantine_knight in location ) {
        KnightReacts();
        rfalse;
    }
    if( noun has rod_attr ) 
        "Please point it at something.";
    "A useless gesture.";
];

[ PointSub r ;
    if( noun notin player ) "But you aren't holding it.";
    if( second in player ) "It's too fiddly pointing it at something you're holding.";
    if( noun hasnt rod_attr ) "Ok. (Why?)";
    if( noun hasnt charged ) "Nothing happens.";

    Achieved(SCORE_AIMWAND);
    r = noun.rod_action;
    if( r == -1 ) {
        "** No rod routine **";
    }
    give noun ~charged;
    r();
    rtrue;
];


[ StrikeSub ;
    if( noun notin player ) "But you aren't holding it.";
    if( noun hasnt rod_attr ) 
        print_ret "You ineffectually bash ", (the) noun, " on the ground.";
    if( noun has charged ) {
        deadflag = DIED;
        "The already-charged rod explodes with cataclysmic violence, burying everything nearby in rubble!";
    }
    give noun charged;
    Achieved(SCORE_WAND);
    if( BeforeRoutines() == true ) {
        rtrue;
    }
    "The rod charges with etherial power, drawn up from the earth through ley lines...";
];


[ MilkSub ;
    if( noun == goat or herd_of_goats ) 
        "Pour encourager les udders... But milking goats is no job for an amateur.";
    "What?";
];

Verb 'strike'
    * noun                                              -> Strike
    * noun 'with' held                                  -> Attack;

Verb 'beckon' 'direct' 'gesture' 'point'
    * noun                                              -> PointVague
    * 'at' noun                                         -> PointAt
    * held 'at' noun                                    -> Point;

Extend 'turn' last
    * noun 'with' held                                  -> TurnWith;

Verb 'knock'
    * 'on' noun                                         -> Knock
    * 'at' noun                                         -> Knock;


Verb 'wash'
    * 'my' 'mouth' 'with' held                          -> Wash
    * 'my' 'mouth' 'out' 'with' held                    -> Wash
    * 'mouth' 'with' held                               -> Wash
    * 'mouth' 'out' 'with' held                         -> Wash;

Verb 'milk'
    * noun                                              -> Milk;

